// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$sprite-nav-about-name: 'sprite-nav-about';
$sprite-nav-about-x: 0px;
$sprite-nav-about-y: 0px;
$sprite-nav-about-offset-x: 0px;
$sprite-nav-about-offset-y: 0px;
$sprite-nav-about-width: 76px;
$sprite-nav-about-height: 62px;
$sprite-nav-about-total-width: 228px;
$sprite-nav-about-total-height: 124px;
$sprite-nav-about-image: '../img/gulp_png_sprite.png';
$sprite-nav-about: (0px, 0px, 0px, 0px, 76px, 62px, 228px, 124px, '../img/gulp_png_sprite.png', 'sprite-nav-about', );
$sprite-nav-blog-name: 'sprite-nav-blog';
$sprite-nav-blog-x: 76px;
$sprite-nav-blog-y: 0px;
$sprite-nav-blog-offset-x: -76px;
$sprite-nav-blog-offset-y: 0px;
$sprite-nav-blog-width: 76px;
$sprite-nav-blog-height: 62px;
$sprite-nav-blog-total-width: 228px;
$sprite-nav-blog-total-height: 124px;
$sprite-nav-blog-image: '../img/gulp_png_sprite.png';
$sprite-nav-blog: (76px, 0px, -76px, 0px, 76px, 62px, 228px, 124px, '../img/gulp_png_sprite.png', 'sprite-nav-blog', );
$sprite-nav-contact-name: 'sprite-nav-contact';
$sprite-nav-contact-x: 0px;
$sprite-nav-contact-y: 62px;
$sprite-nav-contact-offset-x: 0px;
$sprite-nav-contact-offset-y: -62px;
$sprite-nav-contact-width: 76px;
$sprite-nav-contact-height: 62px;
$sprite-nav-contact-total-width: 228px;
$sprite-nav-contact-total-height: 124px;
$sprite-nav-contact-image: '../img/gulp_png_sprite.png';
$sprite-nav-contact: (0px, 62px, 0px, -62px, 76px, 62px, 228px, 124px, '../img/gulp_png_sprite.png', 'sprite-nav-contact', );
$sprite-nav-home-name: 'sprite-nav-home';
$sprite-nav-home-x: 76px;
$sprite-nav-home-y: 62px;
$sprite-nav-home-offset-x: -76px;
$sprite-nav-home-offset-y: -62px;
$sprite-nav-home-width: 76px;
$sprite-nav-home-height: 62px;
$sprite-nav-home-total-width: 228px;
$sprite-nav-home-total-height: 124px;
$sprite-nav-home-image: '../img/gulp_png_sprite.png';
$sprite-nav-home: (76px, 62px, -76px, -62px, 76px, 62px, 228px, 124px, '../img/gulp_png_sprite.png', 'sprite-nav-home', );
$sprite-nav-works-name: 'sprite-nav-works';
$sprite-nav-works-x: 152px;
$sprite-nav-works-y: 0px;
$sprite-nav-works-offset-x: -152px;
$sprite-nav-works-offset-y: 0px;
$sprite-nav-works-width: 76px;
$sprite-nav-works-height: 62px;
$sprite-nav-works-total-width: 228px;
$sprite-nav-works-total-height: 124px;
$sprite-nav-works-image: '../img/gulp_png_sprite.png';
$sprite-nav-works: (152px, 0px, -152px, 0px, 76px, 62px, 228px, 124px, '../img/gulp_png_sprite.png', 'sprite-nav-works', );
$spritesheet-width: 228px;
$spritesheet-height: 124px;
$spritesheet-image: '../img/gulp_png_sprite.png';
$spritesheet-sprites: ($sprite-nav-about, $sprite-nav-blog, $sprite-nav-contact, $sprite-nav-home, $sprite-nav-works, );
$spritesheet: (228px, 124px, '../img/gulp_png_sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
